library(datasets)
data(iris)
?iris
x <- data.frame(iris)
mean(x$Sepal.Length)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
?mtcars
y <- data.frame(mtcars)
with(mtcars,tapply(mpg,cyl,mean))
with(mtcars,tapply(hp,cyl,mean))
209.21429-82.63636
debug(ls)
ls()
q
e
quit
debug()
()
undebug(ls)
with(iris, tapply(Sepal.Length,species, mean))
with(iris, tapply(Sepal.Length,specie, mean))
head(iris)
with(iris, tapply(Sepal.Length, Species, mean))
install.packages("swirl")
library(swirl)
swirl()
bye()
swirl()
library(swirl)
swirl()
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector <- c(4,5)
)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data = NA, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5> 8 || 6 != 8 && 4 >3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
dim(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmass, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants)
tail(plants, 15)
summary(plants)
table(plants@Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), replace = TRUE, prob = c(0.3, 0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 100))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- SysDate()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclasse(d2)
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
ts$min
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B, %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftimes(Sys.time(), t1, units = 'days')
library(difftimes)
source(difftimes)
install.package(difftimes)
install.package(difftimes)
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = car$speed, y = car$dist)
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(y = cars$speed, x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
boxplot(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl)
boxplot(mpg ~ cyl)
boxplot(mtcars, mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg~ cyl, data = mtcars)
hist(mtcars$mpg)
bye()
setwd("~/GitHub/RepData_PeerAssessment2")
setwd("~/GitHub/teste")
setwd("~/GitHub/RepData_PeerAssessment2")
dados <- read.csv("repdata-data-StormData.csv.bz2", header = TRUE, na.strings = "NA")
str(dados)
head(dados)
levels(dados$EVTYPE)
levels(dados$STATE)
View(dados)
tail(dados)
View(dados)
View(dados)
"integer"))
"integer"))
"integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c(NULL, "character", NULL, "character", NULL, NULL,
"factor", "factor", NULL, NULL, NULL, "character",
rep("NULL", 10), "integer", "integer", "numeric",
"character", "numeric", "character", rep("NULL", 9),
"integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c(NULL, "character", NULL, "character", NULL, NULL,
"factor", "factor", NULL, NULL, NULL, "character",
rep("NULL", 10), "numeric", "numeric", "numeric",
"character", "numeric", "character", rep("NULL", 9),
"integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c(NULL, "character", NULL, "character", NULL, NULL,
"factor", "factor", NULL, NULL, NULL, "character",
rep("NULL", 10), "numeric", "numeric", "numeric",
"character", "numeric", "character", rep("NULL", 8),
"integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c(NULL, "character", NULL, "character", NULL, NULL,
"factor", "factor", NULL, NULL, NULL, "character",
rep("NULL", 10), rep(NA, 6), rep("NULL", 8),
"integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c(NULL, "character", NULL, "character", NULL, NULL,
"factor", "factor", NULL, NULL, NULL, "character",
rep("NULL", 10), rep(NA, 6), rep("NULL", 9)))
str(dados)
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA")
str(dados)
head(dados)
names(dados)
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c("NULL", "character", "NULL", "character", "NULL", "NULL",
"factor", "factor", "NULL", "NULL", "NULL", "character",
rep("NULL", 10), "integer", "integer", "numeric",
"character", "numeric", "character", rep("NULL", 8), "integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c("NULL", "character", "NULL", "character", "NULL", "NULL",
"factor", "factor", "NULL", "NULL", "NULL", "character",
rep("NULL", 10), "numeric", "numeric", "numeric",
"character", "numeric", "character", rep("NULL", 8), "integer"))
dados <- read.csv(bzfile("repdata-data-StormData.csv.bz2"), header = TRUE, na.strings = "NA",
colClasses = c("NULL", "character", "NULL", "character", "NULL", "NULL",
"factor", "factor", "NULL", "NULL", "NULL", "character",
rep("NULL", 10), "numeric", "numeric", "numeric",
"character", "numeric", "character", rep("NULL", 8), "numeric"))
str(dados)
object.size(dados)
